1. Sections

You will receive an array of strings. For each string, create a div with a paragraph with the string in it.
Each paragraph is initially hidden (display:none).
Add a click event listener to each div that displays the hidden paragraph. Finally, you should append all divs to the element with an id "content".

2. Time Converter

Create a program that converts different time units. Your task is to add a click event listener to all [CONVERT] buttons.
When a button is clicked, read the corresponding input field, convert the value to the three other time units and display it in the input fields.
One day is equal to 24 hours/1440 minutes/86400 seconds. Whichever button we click, the input fields should change depending on the added value on the left.
(For example, if we write 48 hours and click convert the days, the field value should change to 2).

3. Locked Profile

In this problem, you should create a JS functionality that shows and hides the additional information about users.
When one of the [Show more] buttons is clicked, the hidden information inside the div should
be shown, only if the profile is not locked! If the current profile is locked, nothing should happen.
If the hidden information is displayed and we lock the profile again, the [Hide it] button should not be working!
Otherwise, when the profile is unlocked and we click on the [Hide it] button, the new fields must hide again.

4. Fill Dropdown

Your task is to take values from input fields with ids "newItemText" and "newItemValue". 
Then you should create and append an <option> to the <select> with id "menu".

Hints
· Your function should take the values of newItemText and newItemValue.
After that, you should create a new option element and set its textContent and its value to the newly taken ones.
· Once you have done all of that, you should append the newly created option as a child to the select item with id "menu".
· Finally, you should clear the value of the two input fields.

5. Encode and Decode Messages

In this problem, you should create a JS functionality that encodes and decodes some messages which travel to
the network.
This program should contain two functionalities.
The first one is to encode the given message and send it to the receiver.
The second one is to decode the received message and read it (display it).
When the [Encode and send it] button is clicked, you should get the given message from the first textarea.
When you get the current message, you should encode it as follows:

· Change the ASCII CODE on every single character in that message when you add 1 to the current ASCII NUMBER,
that represents the current character in that message

· Clear the sender textarea and add the encoded message to the receiver textarea.

After that, when the [Decode and read it] button is clicked.
You need to get the encoded message from the receiver textarea and do the opposite logic from encoding:

· Subtract 1 from the current ASCII NUMBER, that represents the current character in that message
· Replace the encoded message with the already decoded message in the receiver textarea, to make it readable

6. Furniture

You will be given some furniture as an array of objects. Each object will have a name, a price, and a decoration factor.
When the ["Generate"] button is clicked, add a new row to the table for each piece of furniture with image, name, price, and decoration factor (code example below).
When the ["Buy"] button is clicked, get all checkboxes that are marked and show in the result textbox the names of the piece of furniture that were checked,
separated by a comma and single space (", ") in the following format: "Bought furniture: {furniture1}, {furniture2}…".
On the next line, print the total price in the format: "Total price: {totalPrice}" (formatted to the second decimal point). Finally, print the average decoration factor in the format: "Average decoration factor: {decFactor}"

Input Example

[{"name": "Sofa", "img": "https://res.cloudinary.com/maisonsdumonde/image/upload/q_auto,f_auto/w_200/img/grey-3-seater-sofa-bed-200-13-0-175521_9.jpg", "price": 150, "decFactor": 1.2}]
